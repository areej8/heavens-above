name: Continuous Integration

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: |
        npm install eslint --save-dev
        npx eslint src/**/*.js --max-warnings 0
      continue-on-error: false
      
    - name: Check code formatting
      run: |
        npm install prettier --save-dev
        npx prettier --check "src/**/*.js" "public/**/*.html" "public/**/*.css"
      continue-on-error: false
      
    - name: Run tests
      run: |
        if [ -f "package.json" ] && grep -q '"test"' package.json; then
          npm test
        else
          echo "No tests defined, skipping..."
        fi
      
    - name: Build project
      run: |
        if [ -f "run.js" ]; then
          node run.js
        fi
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          coverage/
          test-results/
        retention-days: 30
        
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run npm audit
      run: |
        npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
  build-status:
    name: Build Status Check
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-scan]
    if: always()
    
    steps:
    - name: Check build status
      run: |
        if [ "${{ needs.lint-and-test.result }}" == "failure" ] || [ "${{ needs.security-scan.result }}" == "failure" ]; then
          echo "Build failed!"
          exit 1
        else
          echo "Build successful!"
        fi
